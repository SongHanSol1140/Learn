// 문제 설명
// 자연수 n이 주어졌을 때, n의 다음 큰 숫자는 다음과 같이 정의 합니다.

// 조건 1. n의 다음 큰 숫자는 n보다 큰 자연수 입니다.
// 조건 2. n의 다음 큰 숫자와 n은 2진수로 변환했을 때 1의 갯수가 같습니다.
// 조건 3. n의 다음 큰 숫자는 조w건 1, 2를 만족하는 수 중 가장 작은 수 입니다.
// 예를 들어서 78(1001110)의 다음 큰 숫자는 83(1010011)입니다.

// 자연수 n이 매개변수로 주어질 때, n의 다음 큰 숫자를 return 하는 solution 함수를 완성해주세요.

// 제한 사항
// n은 1,000,000 이하의 자연수 입니다.

// 입출력 예
// n	result
// 78	83
// 15	23
// 입출력 예 설명
// 입출력 예#1
// 문제 예시와 같습니다.
// 입출력 예#2
// 15(1111)의 다음 큰 숫자는 23(10111)입니다.

// 풀이방식
// 1. 주어진 숫자를 toString으로 이진수로 변환(문자열)
// 2. split('')로 한글자씩 분리,
// 3. 해당값이 '1'인지 문자열로 비교하여 필터링
// 4. 배열의 갯수를 확인
// 5. 입력값 n++;를 반복하며 똑같이 계산해 같은값이 나올때까지 반복,
// 6. 같은값이 나온다면 반복중지
function solution(n) {
    const oneCount = n.toString(2).split('').filter(one => one === '1').length;
    let nn = n + 1;
    while (true) {
        const twoCount = nn.toString(2).split('').filter(one => one === '1').length;
        if (oneCount === twoCount) {
            console.log(nn);
            return nn;
        }
        nn++;
    }
}